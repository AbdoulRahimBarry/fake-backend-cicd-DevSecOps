--- 
- 
  docker_login: 
    password: "{{ var_docker_hub_password }}"
    username: "{{ var_docker_hub_login }}"
  name: "Log into DockerHub"
  tags: 
    - build
- 
  file: 
    path: "{{ house }}/new_folder"
    state: directory
  name: "Change file ownership, group and permissions"
  tags: 
    - build
    - deploy
    - preprod
- 
  copy: 
    content: "{{ var_my_private_key }}"
    dest: "{{ house }}/.ssh/id_rsa"
    owner: centos
  name: "Copy file with owner and permissions"
  tags: 
    - build
    - deploy
    - preprod
- 
  git: 
    accept_hostkey: true
    dest: "{{ house }}/new_folder"
    force: true
    key_file: "{{ house }}/.ssh/id_rsa"
    recursive: false
    repo: "{{ var_repository_github }}"
    version: "{{ repository_brach }}"
  tags: 
    - build
    - deploy
    - preprod
- 
  docker_image: 
    build: 
      path: "{{ house }}/new_folder/fake-backend/"
    name: "{{ var_docker_hub_login }}/fake-backend-jenkins_ci_cd_image"
    tag: "{{ repository_tag }}"
  name: "Build an image and push it to a private repo"
  tags: 
    - build
- 
  docker_image: 
    name: "{{ var_docker_hub_login }}/fake-backend-jenkins_ci_cd_image"
    path: "{{ house }}/new_folder/fake-backend/"
    push: true
    tag: "{{ repository_tag }}"
  name: "Push an image it to a private repo"
  tags: 
    - push
- 
  docker_image: 
    name: "{{ var_docker_hub_login }}/fake-backend-jenkins_ci_cd_image"
    source: pull
    tag: "{{ repository_tag }}"
  name: "pull an image"
  tags: 
    - pull
- 
  docker_network: 
    name: network_battleboat
  name: "Create a network"
  tags: 
    - deploy
    - preprod
    - build
- 
  docker_volume: 
    name: data
  name: "Create a volume"
  tags: 
    - deploy
    - preprod
- 
  docker_container: 
    env: 
      MYSQL_DATABASE: battleboat
      MYSQL_PASSWORD: battlepass
      MYSQL_ROOT_PASSWORD: rootpwdgame
      MYSQL_USER: battleuser
    image: "mysql:5.7"
    name: dbgame
    networks: 
      - 
        name: network_battleboat
    state: started
    volumes: 
      - "data:/var/lib/mysql"
  name: "Create a data container db"
  tags: 
    - deploy
    - preprod
- 
  name: "sleep for 60 seconds and continue with play"
  tags: 
    - deploy
    - preprod
  wait_for: 
    timeout: 60
- 
  docker_container: 
    env: 
      DATABASE_HOST: dbgame
      DATABASE_NAME: battleboat
      DATABASE_PASSWORD: battlepass
      DATABASE_PORT: "3306"
      DATABASE_USER: battleuser
    image: "{{var_docker_hub_login}}/fake-backend-jenkins_ci_cd_image:{{repository_tag}}"
    name: frontend
    networks: 
      - 
        name: network_battleboat
    ports: 
      - "80:3000"
    state: started
    volumes: 
      - "{{ house }}/new_folder/battleboat:/etc/backend/static"
  name: "Create a data container api"
  tags: 
    - deploy
    - preprod
- 
  name: "Check that you can connect (GET) to a page and it returns a status 200"
  tags: 
    - testApi
  uri: 
    url: "http://172.18.0.1"

